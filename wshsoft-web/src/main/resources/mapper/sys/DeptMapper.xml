<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wshsoft.sys.mapper.DeptMapper">
    <resultMap type="Dept" id="DeptResult">
        <result property="deptId"    column="dept_id"    />
        <result property="parentId"    column="parent_id"    />
        <result property="ancestors"    column="ancestors"    />
        <result property="deptName"    column="dept_name"    />
        <result property="orderNum"    column="order_num"    />
        <result property="leader"    column="leader"    />
        <result property="phone"    column="phone"    />
        <result property="email"    column="email"    />
        <result property="status"    column="status"    />
        <result property="delFlag"    column="del_flag"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="parentName" column="parent_name" />
    </resultMap>

    <sql id="selectDeptVo">
        select dept_id, parent_id, ancestors, dept_name, order_num, leader, phone, email, status, del_flag, create_by, create_time, update_by, update_time from sys_dept
    </sql>

    <select id="selectDeptList" parameterType="Dept" resultMap="DeptResult">
        <include refid="selectDeptVo"/>
        where del_flag = '0'
        <if test="parentId != null and parentId != 0">
            AND parent_id = #{parentId}
        </if>
        <if test="deptName != null and deptName != ''">
            AND dept_name like concat('%', #{deptName}, '%')
        </if>
        <if test="status != null and status != ''">
            AND status = #{status}
        </if>
        <!-- 数据范围过滤 -->
        ${params.dataScope}
        order by parent_id, order_num
    </select>
    
    <select id="checkDeptExistUser" parameterType="Long" resultType="int">
        select count(1) from sys_user where dept_id = #{deptId} and del_flag = '0'
    </select>
    
    <select id="selectDeptCount" parameterType="Dept" resultType="int">
        select count(1) from sys_dept
        where del_flag = '0'
        <if test="deptId != null and deptId != 0"> and dept_id = #{deptId} </if>
        <if test="parentId != null and parentId != 0"> and parent_id = #{parentId} </if>
    </select>
    
    <select id="checkDeptNameUnique" resultMap="DeptResult">
        <include refid="selectDeptVo"/>
        where dept_name=#{deptName} and parent_id = #{parentId}
    </select>
    
    <select id="selectDeptById" parameterType="Long" resultMap="DeptResult">
        select d.dept_id, d.parent_id, d.ancestors, d.dept_name, d.order_num, d.leader, d.phone, d.email, d.status,
            (select dept_name from sys_dept where dept_id = d.parent_id) parent_name
        from sys_dept d
        where d.dept_id = #{deptId}
    </select>
    
    <update id="updateDeptChildren" parameterType="java.util.List">
      update sys_dept set ancestors =
      <foreach collection="depts" item="item" index="index"
          separator=" " open="case dept_id" close="end">
          when #{item.deptId} then #{item.ancestors}
      </foreach>
      where dept_id in
      <foreach collection="depts" item="item" index="index"
          separator="," open="(" close=")">
          #{item.deptId}
      </foreach>
   </update>
   
   <update id="updateDeptStatus" parameterType="Dept">
       update sys_dept
       <set>
           <if test="status != null and status != ''">status = #{status},</if>
       </set>
       where dept_id in (${ancestors})
   </update>
   
    <select id="selectChildrenDeptById" parameterType="Long" resultMap="DeptResult">
        select * from sys_dept where find_in_set(#{deptId}, ancestors)
    </select>
</mapper>